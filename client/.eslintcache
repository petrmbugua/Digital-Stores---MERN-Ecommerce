[{"/home/petr/projects/digital-stores/client/src/core/Menu.js":"1","/home/petr/projects/digital-stores/client/src/user/DeleteUser.js":"2","/home/petr/projects/digital-stores/client/src/user/Signup.js":"3","/home/petr/projects/digital-stores/client/src/user/Users.js":"4","/home/petr/projects/digital-stores/client/src/cart/Checkout.js":"5","/home/petr/projects/digital-stores/client/src/App.js":"6","/home/petr/projects/digital-stores/client/src/user/Profile.js":"7","/home/petr/projects/digital-stores/client/src/shop/NewShop.js":"8","/home/petr/projects/digital-stores/client/src/core/Home.js":"9","/home/petr/projects/digital-stores/client/src/user/EditProfile.js":"10","/home/petr/projects/digital-stores/client/src/product/Search.js":"11","/home/petr/projects/digital-stores/client/src/product/Products.js":"12","/home/petr/projects/digital-stores/client/src/product/Product.js":"13","/home/petr/projects/digital-stores/client/src/order/ShopOrders.js":"14","/home/petr/projects/digital-stores/client/src/order/ProductOrderEdit.js":"15","/home/petr/projects/digital-stores/client/src/order/Order.js":"16","/home/petr/projects/digital-stores/client/src/cart/CartItems.js":"17","/home/petr/projects/digital-stores/client/src/cart/Cart.js":"18","/home/petr/projects/digital-stores/client/src/reportWebVitals.js":"19","/home/petr/projects/digital-stores/client/src/auth/PrivateRoute.js":"20","/home/petr/projects/digital-stores/client/src/shop/Shops.js":"21","/home/petr/projects/digital-stores/client/src/cart/PlaceOrder.js":"22","/home/petr/projects/digital-stores/client/src/shop/MyShops.js":"23","/home/petr/projects/digital-stores/client/src/index.js":"24","/home/petr/projects/digital-stores/client/src/auth/Signin.js":"25"},{"size":3247,"mtime":1612203385380,"results":"26","hashOfConfig":"27"},{"size":1378,"mtime":1612364797990,"results":"28","hashOfConfig":"27"},{"size":5061,"mtime":1612366092250,"results":"29","hashOfConfig":"27"},{"size":1137,"mtime":1612366083600,"results":"30","hashOfConfig":"27"},{"size":3312,"mtime":1612366021570,"results":"31","hashOfConfig":"27"},{"size":200,"mtime":1612195170780,"results":"32","hashOfConfig":"27"},{"size":2135,"mtime":1612366111570,"results":"33","hashOfConfig":"27"},{"size":2617,"mtime":1612362530130,"results":"34","hashOfConfig":"27"},{"size":1613,"mtime":1612272425180,"results":"35","hashOfConfig":"27"},{"size":5022,"mtime":1612366133980,"results":"36","hashOfConfig":"27"},{"size":2752,"mtime":1612366162030,"results":"37","hashOfConfig":"27"},{"size":1378,"mtime":1612366172080,"results":"38","hashOfConfig":"27"},{"size":2903,"mtime":1612366177230,"results":"39","hashOfConfig":"27"},{"size":4366,"mtime":1612366227400,"results":"40","hashOfConfig":"27"},{"size":6182,"mtime":1612366265270,"results":"41","hashOfConfig":"27"},{"size":4133,"mtime":1612366279690,"results":"42","hashOfConfig":"27"},{"size":4644,"mtime":1612366344760,"results":"43","hashOfConfig":"27"},{"size":654,"mtime":1612366428170,"results":"44","hashOfConfig":"27"},{"size":362,"mtime":1612191824680,"results":"45","hashOfConfig":"27"},{"size":488,"mtime":1612348647300,"results":"46","hashOfConfig":"27"},{"size":1370,"mtime":1612366549790,"results":"47","hashOfConfig":"27"},{"size":1306,"mtime":1612366466380,"results":"48","hashOfConfig":"27"},{"size":3373,"mtime":1612366539350,"results":"49","hashOfConfig":"27"},{"size":542,"mtime":1612193723820,"results":"50","hashOfConfig":"27"},{"size":2604,"mtime":1612197909670,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12xyynr",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"65"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/petr/projects/digital-stores/client/src/core/Menu.js",[],"/home/petr/projects/digital-stores/client/src/user/DeleteUser.js",[],"/home/petr/projects/digital-stores/client/src/user/Signup.js",[],["107","108"],"/home/petr/projects/digital-stores/client/src/user/Users.js",[],"/home/petr/projects/digital-stores/client/src/cart/Checkout.js",[],"/home/petr/projects/digital-stores/client/src/App.js",[],["109","110"],"/home/petr/projects/digital-stores/client/src/user/Profile.js",["111"],"/home/petr/projects/digital-stores/client/src/shop/NewShop.js",[],"/home/petr/projects/digital-stores/client/src/core/Home.js",["112"],"import React, { useState, useEffect } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport Suggestions from '../product/Suggestions';\nimport { listLatest, listCategories } from '../product/api-product.js';\nimport Search from '../product/Search';\nimport Categories from '../product/Categories';\n\nexport default function Home() {\n  const [suggestionTitle, setSuggestionTitle] = useState('Latest Products');\n  const [categories, setCategories] = useState([]);\n  const [suggestions, setSuggestions] = useState([]);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    listLatest(signal).then((data) => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setSuggestions(data);\n      }\n    });\n    return function cleanup() {\n      abortController.abort();\n    };\n  }, []);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    listCategories(signal).then((data) => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setCategories(data);\n      }\n    });\n    return function cleanup() {\n      abortController.abort();\n    };\n  }, []);\n\n  return (\n    <>\n      <Grid columns={2}>\n        <Grid.Row>\n          <Grid.Column>\n            <Search categories={categories} />\n            <Categories categories={categories} />\n          </Grid.Column>\n          <Grid.Column>\n            <Suggestions products={suggestions} title={suggestionTitle} />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </>\n  );\n}\n","/home/petr/projects/digital-stores/client/src/user/EditProfile.js",["113"],"import React, { useState, useEffect } from 'react';\n\nimport { Button, Card, Form, Icon, Message } from 'semantic-ui-react';\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport { makeStyles } from '@material-ui/core/styles';\nimport auth from './../auth/auth-helper';\nimport { read, update } from './api-user.js';\nimport { Redirect } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    maxWidth: 600,\n    margin: 'auto',\n    textAlign: 'center',\n    marginTop: theme.spacing(5),\n    paddingBottom: theme.spacing(2),\n  },\n  title: {\n    margin: theme.spacing(2),\n    color: theme.palette.protectedTitle,\n  },\n  error: {\n    verticalAlign: 'middle',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 300,\n  },\n  submit: {\n    margin: 'auto',\n    marginBottom: theme.spacing(2),\n  },\n  subheading: {\n    marginTop: theme.spacing(2),\n    color: theme.palette.openTitle,\n  },\n}));\n\nexport default function EditProfile({ match }) {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    name: '',\n    email: '',\n    password: '',\n    seller: false,\n    redirectToProfile: false,\n    error: '',\n  });\n  const jwt = auth.isAuthenticated();\n  useEffect(() => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n\n    read(\n      {\n        userId: match.params.userId,\n      },\n      { t: jwt.token },\n      signal\n    ).then((data) => {\n      if (data && data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        setValues({\n          ...values,\n          name: data.name,\n          email: data.email,\n          seller: data.seller,\n        });\n      }\n    });\n    return function cleanup() {\n      abortController.abort();\n    };\n  }, [match.params.userId]);\n\n  const clickSubmit = () => {\n    const user = {\n      name: values.name || undefined,\n      email: values.email || undefined,\n      password: values.password || undefined,\n      seller: values.seller || undefined,\n    };\n    update(\n      {\n        userId: match.params.userId,\n      },\n      {\n        t: jwt.token,\n      },\n      user\n    ).then((data) => {\n      if (data && data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        auth.updateUser(data, () => {\n          setValues({ ...values, userId: data._id, redirectToProfile: true });\n        });\n      }\n    });\n  };\n  const handleChange = (name) => (event) => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n  const handleCheck = (event, checked) => {\n    setValues({ ...values, seller: checked });\n  };\n\n  if (values.redirectToProfile) {\n    return <Redirect to={'/user/' + values.userId} />;\n  }\n  return (\n    <>\n      <Card.Group>\n        <Card>\n          <Card.Content>\n            <Card.Header>\n              <Icon name='user plus' /> Edit Profile\n            </Card.Header>\n\n            <Card.Description>\n              <Form>\n                <Form.Field>\n                  <label>Name</label>\n                  <input\n                    type='text'\n                    value={values.name}\n                    onChange={handleChange('name')}\n                  />\n                </Form.Field>\n\n                <Form.Field>\n                  <label>Email</label>\n                  <input\n                    type='email'\n                    value={values.email}\n                    onChange={handleChange('email')}\n                  />\n                </Form.Field>\n\n                <Form.Field>\n                  <label>Seller Account</label>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        classes={{\n                          checked: classes.checked,\n                          bar: classes.bar,\n                        }}\n                        checked={values.seller}\n                        onChange={handleCheck}\n                      />\n                    }\n                    label={values.seller ? 'Active' : 'Inactive'}\n                  />\n                </Form.Field>\n\n                <Form.Field>\n                  <label>Password</label>\n                  <input\n                    type='password'\n                    value={values.password}\n                    onChange={handleChange('password')}\n                  />\n                </Form.Field>\n              </Form>\n            </Card.Description>\n          </Card.Content>\n\n          <Card.Content extra>\n            {values.error && (\n              <Message\n                error\n                header={<Icon name='info circle' />}\n                content={values.error}\n              />\n            )}\n            <div className='ui two buttons'>\n              <Button basic color='green' onClick={clickSubmit}>\n                Submit\n              </Button>\n            </div>\n          </Card.Content>\n        </Card>\n      </Card.Group>\n    </>\n  );\n}\n","/home/petr/projects/digital-stores/client/src/product/Search.js",[],"/home/petr/projects/digital-stores/client/src/product/Products.js",[],"/home/petr/projects/digital-stores/client/src/product/Product.js",["114"],"/home/petr/projects/digital-stores/client/src/order/ShopOrders.js",["115"],"/home/petr/projects/digital-stores/client/src/order/ProductOrderEdit.js",["116","117"],"/home/petr/projects/digital-stores/client/src/order/Order.js",["118","119"],"/home/petr/projects/digital-stores/client/src/cart/CartItems.js",[],"/home/petr/projects/digital-stores/client/src/cart/Cart.js",[],"/home/petr/projects/digital-stores/client/src/reportWebVitals.js",[],"/home/petr/projects/digital-stores/client/src/auth/PrivateRoute.js",[],"/home/petr/projects/digital-stores/client/src/shop/Shops.js",[],"/home/petr/projects/digital-stores/client/src/cart/PlaceOrder.js",[],"/home/petr/projects/digital-stores/client/src/shop/MyShops.js",["120"],"import React, { useState, useEffect } from 'react';\nimport { Card, Button, Icon, Divider, List, Image } from 'semantic-ui-react';\nimport auth from './../auth/auth-helper';\nimport { listByOwner } from './api-shop.js';\nimport { Redirect, Link } from 'react-router-dom';\nimport DeleteShop from './DeleteShop';\n\nexport default function MyShops() {\n  const [shops, setShops] = useState([]);\n  const [redirectToSignin, setRedirectToSignin] = useState(false);\n  const jwt = auth.isAuthenticated();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    listByOwner(\n      {\n        userId: jwt.user._id,\n      },\n      { t: jwt.token },\n      signal\n    ).then((data) => {\n      if (data.error) {\n        setRedirectToSignin(true);\n      } else {\n        setShops(data);\n      }\n    });\n    return function cleanup() {\n      abortController.abort();\n    };\n  }, []);\n\n  const removeShop = (shop) => {\n    const updatedShops = [...shops];\n    const index = updatedShops.indexOf(shop);\n    updatedShops.splice(index, 1);\n    setShops(updatedShops);\n  };\n\n  if (redirectToSignin) {\n    return <Redirect to='/signin' />;\n  }\n  return (\n    <>\n      <Card.Group>\n        <Card fluid>\n          <Card.Content>\n            <Card.Header>Your Shops</Card.Header>\n            <Card.Meta>\n              <Link to='/seller/shop/new'>\n                <Button color='primary'>\n                  <Icon name='add circle' size='large' /> New Shop\n                </Button>\n              </Link>\n            </Card.Meta>\n            <Divider />\n            <Card.Description>\n              {shops.map((shop, i) => {\n                return (\n                  <List key={i}>\n                    <List.Item>\n                      <Image\n                        size='small'\n                        src={\n                          '/api/shops/logo/' +\n                          shop._id +\n                          '?' +\n                          new Date().getTime()\n                        }\n                      />\n                      <List.Content>\n                        <List.Header>{shop.name}</List.Header>\n                        <List.Description>{shop.description}</List.Description>\n                      </List.Content>\n\n                      {auth.isAuthenticated().user &&\n                        auth.isAuthenticated().user._id === shop.owner._id && (\n                          <List.Content>\n                            <Link\n                              to={\n                                '/seller/orders/' + shop.name + '/' + shop._id\n                              }\n                            >\n                              <Button color='primary'>View Orders</Button>\n                            </Link>\n                            <Link to={'/seller/shop/edit/' + shop._id}>\n                              <Button>\n                                <Icon name='edit' size='large' />\n                              </Button>\n                            </Link>\n                            <DeleteShop shop={shop} onRemove={removeShop} />\n                          </List.Content>\n                        )}\n                    </List.Item>\n                  </List>\n                );\n              })}\n            </Card.Description>\n          </Card.Content>\n        </Card>\n      </Card.Group>\n    </>\n  );\n}\n","/home/petr/projects/digital-stores/client/src/index.js",[],"/home/petr/projects/digital-stores/client/src/auth/Signin.js",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"121","replacedBy":"125"},{"ruleId":"123","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":34,"column":6,"nodeType":"129","endLine":34,"endColumn":27,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":9,"column":27,"nodeType":"133","messageId":"134","endLine":9,"endColumn":45},{"ruleId":"127","severity":1,"message":"135","line":78,"column":6,"nodeType":"129","endLine":78,"endColumn":27,"suggestions":"136"},{"ruleId":"131","severity":1,"message":"137","line":11,"column":10,"nodeType":"133","messageId":"134","endLine":11,"endColumn":15},{"ruleId":"127","severity":1,"message":"138","line":66,"column":6,"nodeType":"129","endLine":66,"endColumn":8,"suggestions":"139"},{"ruleId":"127","severity":1,"message":"140","line":69,"column":6,"nodeType":"129","endLine":69,"endColumn":8,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":179,"column":25,"nodeType":"144","endLine":182,"endColumn":27},{"ruleId":"131","severity":1,"message":"145","line":11,"column":11,"nodeType":"133","messageId":"134","endLine":11,"endColumn":17},{"ruleId":"127","severity":1,"message":"146","line":24,"column":6,"nodeType":"129","endLine":24,"endColumn":8,"suggestions":"147"},{"ruleId":"127","severity":1,"message":"148","line":32,"column":6,"nodeType":"129","endLine":32,"endColumn":8,"suggestions":"149"},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],["150"],["151"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'jwt.token'. Either include it or remove the dependency array.","ArrayExpression",["152"],"no-unused-vars","'setSuggestionTitle' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'jwt.token' and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["153"],"'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'jwt.token' and 'match.params.shopId'. Either include them or remove the dependency array.",["154"],"React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["155"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'signal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'match.params.orderId'. Either include it or remove the dependency array.",["156"],"React Hook useEffect has missing dependencies: 'jwt.token' and 'jwt.user._id'. Either include them or remove the dependency array.",["157"],"no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},"Update the dependencies array to be: [jwt.token, match.params.userId]",{"range":"170","text":"171"},"Update the dependencies array to be: [jwt.token, match.params.userId, values]",{"range":"172","text":"173"},"Update the dependencies array to be: [jwt.token, match.params.shopId]",{"range":"174","text":"175"},"Update the dependencies array to be: [values]",{"range":"176","text":"177"},"Update the dependencies array to be: [match.params.orderId]",{"range":"178","text":"179"},"Update the dependencies array to be: [jwt.token, jwt.user._id]",{"range":"180","text":"181"},[968,989],"[jwt.token, match.params.userId]",[1872,1893],"[jwt.token, match.params.userId, values]",[1872,1874],"[jwt.token, match.params.shopId]",[1789,1791],"[values]",[700,702],"[match.params.orderId]",[919,921],"[jwt.token, jwt.user._id]"]